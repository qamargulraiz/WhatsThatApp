{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: true\n    });\n  }, [messages]);\n  var handleSendMessage = function handleSendMessage() {\n    if (inputText.trim() === '') return;\n    setMessages([].concat(_toConsumableArray(messages), [{\n      text: inputText,\n      sender: 'user'\n    }]));\n    setInputText('');\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.container,\n      children: [_jsx(ScrollView, {\n        ref: scrollViewRef,\n        onContentSizeChange: function onContentSizeChange() {\n          return scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        contentContainerStyle: styles.messageListContainer,\n        children: messages.map(function (message, index) {\n          return _jsx(View, {\n            style: [styles.messageContainer, message.sender === 'user' ? styles.userMessageContainer : styles.otherMessageContainer],\n            children: _jsx(Text, {\n              style: message.sender === 'user' ? styles.userMessageText : styles.otherMessageText,\n              children: message.text\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          value: inputText,\n          onChangeText: setInputText,\n          placeholder: \"Type a message\",\n          style: styles.textInput,\n          onSubmitEditing: handleSendMessage\n        }), _jsx(TouchableOpacity, {\n          style: styles.sendButton,\n          onPress: handleSendMessage,\n          children: _jsx(Text, {\n            style: styles.sendButtonText,\n            children: \"Send\"\n          })\n        })]\n      })]\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  chatContainer: {\n    flex: 1,\n    height: 20,\n    backgroundColor: '#F5F5F5',\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  messageContainer: {\n    marginBottom: 10\n  },\n  message: {\n    backgroundColor: '#FFFFFF',\n    padding: 10,\n    borderRadius: 10,\n    maxWidth: '80%'\n  },\n  inputContainer: {\n    width: '100%',\n    height: 50,\n    backgroundColor: '#FFFFFF',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    justifyContent: 'flex-end'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#C8C8C8',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginRight: 10\n  },\n  sendButton: {\n    backgroundColor: '#3366FF',\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","Chat","messages","setMessages","inputText","setInputText","scrollViewRef","current","scrollToEnd","animated","handleSendMessage","trim","text","sender","styles","safeAreaContainer","Platform","OS","container","messageListContainer","map","message","index","messageContainer","userMessageContainer","otherMessageContainer","userMessageText","otherMessageText","inputContainer","textInput","sendButton","sendButtonText","StyleSheet","create","chatContainer","flex","height","backgroundColor","paddingTop","paddingHorizontal","marginBottom","padding","borderRadius","maxWidth","width","flexDirection","alignItems","justifyContent","input","borderWidth","borderColor","marginRight","paddingVertical","color","fontWeight"],"sources":["C:/WhatsThat Server/WhatsThatApp/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform\r\n} from 'react-native';\r\n\r\nexport default function Chat () {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const scrollViewRef = useRef();\r\n\r\n  // Scroll to bottom of the message list whenever a new message is added\r\n  useEffect(() => {\r\n    scrollViewRef.current.scrollToEnd({ animated: true });\r\n  }, [messages]);\r\n\r\n  // Function to handle sending a message\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim() === '') return;\r\n    setMessages([...messages, { text: inputText, sender: 'user' }]);\r\n    setInputText('');\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.safeAreaContainer}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.container}\r\n      >\r\n        <ScrollView\r\n          ref={scrollViewRef}\r\n          onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}\r\n          contentContainerStyle={styles.messageListContainer}\r\n        >\r\n          {messages.map((message, index) => (\r\n            <View\r\n              key={index}\r\n              style={[\r\n                styles.messageContainer,\r\n                message.sender === 'user' ? styles.userMessageContainer : styles.otherMessageContainer\r\n              ]}\r\n            >\r\n              <Text style={message.sender === 'user' ? styles.userMessageText : styles.otherMessageText}>\r\n                {message.text}\r\n              </Text>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            value={inputText}\r\n            onChangeText={setInputText}\r\n            placeholder=\"Type a message\"\r\n            style={styles.textInput}\r\n            onSubmitEditing={handleSendMessage}\r\n          />\r\n          <TouchableOpacity style={styles.sendButton} onPress={handleSendMessage}>\r\n            <Text style={styles.sendButtonText}>Send</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    chatContainer: {\r\n      flex: 1,\r\n      height:20,\r\n      backgroundColor: '#F5F5F5',\r\n      paddingTop: 10,\r\n      paddingHorizontal: 10,\r\n    },\r\n    messageContainer: {\r\n      marginBottom: 10,\r\n    },\r\n    message: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n      maxWidth: '80%',\r\n    },\r\n    inputContainer: {\r\n        width:'100%',\r\n      height: 50,\r\n      backgroundColor: '#FFFFFF',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingHorizontal: 10,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      height: 40,\r\n      borderWidth: 1,\r\n      borderColor: '#C8C8C8',\r\n      borderRadius: 10,\r\n      paddingHorizontal: 10,\r\n      marginRight: 10,\r\n    },\r\n    sendButton: {\r\n      backgroundColor: '#3366FF',\r\n      borderRadius: 10,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n    },\r\n    sendButtonText: {\r\n      color: '#FFFFFF',\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}