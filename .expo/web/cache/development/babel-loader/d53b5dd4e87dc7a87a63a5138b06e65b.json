{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { loggedUser, URLaddress } from \"./App\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chat = function Chat(_ref) {\n  var route = _ref.route;\n  var productId = route.params.productId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  useEffect(function () {\n    fetch(URLaddress + \"/products/\" + productId + \"/reviews\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': loggedUser.Stoken\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setMessages(result.reviews);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  }, []);\n  var sendMessage = function sendMessage() {\n    fetch(URLaddress + \"/products/\" + productId + \"/reviews\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': loggedUser.Stoken\n      },\n      body: JSON.stringify({\n        review: newMessage\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setMessages([].concat(_toConsumableArray(messages), [result.review]));\n      setNewMessage('');\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      style: styles.scrollView,\n      children: messages.map(function (message, index) {\n        return _jsxs(View, {\n          style: message.reviewer_id === loggedUser.userId ? styles.sentMessage : styles.receivedMessage,\n          children: [message.reviewer_id !== loggedUser.userId && _jsx(Text, {\n            style: styles.senderName,\n            children: message.reviewer_name\n          }), _jsx(Text, {\n            children: message.review\n          })]\n        }, index);\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Type your message here\",\n        value: newMessage,\n        onChangeText: function onChangeText(text) {\n          return setNewMessage(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: sendMessage,\n        children: _jsx(Text, {\n          style: styles.sendButtonText,\n          children: \"Send\"\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","loggedUser","URLaddress","Chat","route","productId","params","messages","setMessages","newMessage","setNewMessage","fetch","headers","Stoken","then","response","json","result","reviews","catch","error","console","sendMessage","method","body","JSON","stringify","review","styles","container","scrollView","map","message","index","reviewer_id","userId","sentMessage","receivedMessage","senderName","reviewer_name","inputContainer","textInput","text","sendButton","sendButtonText"],"sources":["C:/WhatsThat Server/WhatsThatApp/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { loggedUser, URLaddress } from './App';\r\n\r\nconst Chat = ({ route }) => {\r\n  const { productId } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`${URLaddress}/products/${productId}/reviews`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorization': loggedUser.Stoken\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setMessages(result.reviews);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    fetch(`${URLaddress}/products/${productId}/reviews`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorization': loggedUser.Stoken\r\n      },\r\n      body: JSON.stringify({\r\n        review: newMessage\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setMessages([...messages, result.review]);\r\n        setNewMessage('');\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        {messages.map((message, index) => (\r\n          <View key={index} style={message.reviewer_id === loggedUser.userId ? styles.sentMessage : styles.receivedMessage}>\r\n            {message.reviewer_id !== loggedUser.userId &&\r\n              <Text style={styles.senderName}>{message.reviewer_name}</Text>\r\n            }\r\n            <Text>{message.review}</Text>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Type your message here\"\r\n          value={newMessage}\r\n          onChangeText={text => setNewMessage(text)}\r\n        />\r\n        <TouchableOpacity style={styles.sendButton} onPress={sendMessage}>\r\n          <Text style={styles.sendButtonText}>Send</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}