{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getChatById, postMessage, postAddMember, deleteChatMember } from \"./ChatRequests\";\nimport { URLaddress, loggedUser } from \"./App\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var route = _ref.route;\n  var chatId = route.params.chatId;\n  var _useState = useState({\n      messages: []\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    chat = _useState2[0],\n    setChat = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputText = _useState6[0],\n    setInputText = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showMembers = _useState8[0],\n    setShowMembers = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userId = _useState10[0],\n    setUserId = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedMessage = _useState12[0],\n    setSelectedMessage = _useState12[1];\n  var scrollViewRef = useRef();\n  var navigation = useNavigation();\n  useEffect(function () {\n    getChatById(setChat, chatId);\n  }, []);\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: true\n    });\n  }, [messages]);\n  var handleSendMessage = function handleSendMessage() {\n    if (inputText.trim() === '') return;\n    setMessages([].concat(_toConsumableArray(messages), [{\n      text: inputText,\n      sender: 'user'\n    }]));\n    setInputText('');\n    console.log(\"Message sent:\", inputText);\n    postMessage(chatId, inputText).then(function () {\n      getChatById(setChat, chatId);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  var handleAddMember = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log('Adding member');\n      try {\n        yield postAddMember(chatId, userId);\n        setUserId('');\n        yield getChatById(setChat, chatId);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleAddMember() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRemoveMember = function () {\n    var _ref3 = _asyncToGenerator(function* (memberId) {\n      console.log('Removing member');\n      try {\n        yield deleteChatMember(chatId, memberId);\n        yield getChatById(setChat, chatId);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleRemoveMember(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleEditMessage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      console.log('Editing message');\n    });\n    return function handleEditMessage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleDeleteMessage = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      console.log('Deleting message');\n    });\n    return function handleDeleteMessage() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    children: [showMembers && _jsxs(View, {\n      style: styles.membersContainer,\n      children: [_jsx(Text, {\n        style: styles.membersHeader,\n        children: \"Members\"\n      }), chat.members.map(function (member) {\n        return _jsxs(View, {\n          style: styles.memberRow,\n          children: [_jsxs(Text, {\n            style: styles.memberName,\n            children: [member.first_name, \" \", member.last_name]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleRemoveMember(member.user_id);\n            },\n            children: _jsx(FontAwesome, {\n              name: \"trash-o\",\n              size: 24,\n              color: \"red\"\n            })\n          })]\n        }, member.user_id);\n      }), _jsxs(View, {\n        style: styles.addMemberContainer,\n        children: [_jsx(TextInput, {\n          style: styles.addMemberInput,\n          placeholder: \"Enter userId\",\n          value: userId,\n          onChangeText: function onChangeText(value) {\n            return setUserId(value);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.addMemberButton,\n          onPress: handleAddMember,\n          children: _jsx(Text, {\n            style: styles.addMemberButtonText,\n            children: \"Add Member\"\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.backButtonText,\n          children: '<'\n        })\n      }), _jsx(Text, {\n        style: styles.headerText,\n        children: chat.name\n      }), _jsx(TouchableOpacity, {\n        style: styles.membersButton,\n        onPress: function onPress() {\n          return setShowMembers(!showMembers);\n        },\n        children: _jsx(FontAwesome, {\n          name: \"users\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.container,\n      children: [_jsxs(ScrollView, {\n        ref: scrollViewRef,\n        onContentSizeChange: function onContentSizeChange() {\n          return scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        contentContainerStyle: styles.messageListContainer,\n        children: [chat.messages.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        }).map(function (message, index, array) {\n          return _jsxs(View, {\n            children: [index === 0 || new Date(message.timestamp).toDateString() !== new Date(array[index - 1].timestamp).toDateString() ? _jsx(View, {\n              style: styles.dateSeparatorContainer,\n              children: _jsx(Text, {\n                style: styles.dateSeparatorText,\n                children: new Date(message.timestamp).toDateString()\n              })\n            }) : null, _jsxs(TouchableOpacity, {\n              style: [styles.messageContainer, message.author.user_id === loggedUser.userId ? styles.userMessageContainer : styles.otherMessageContainer],\n              onPress: function onPress() {\n                return setSelectedMessage(message.id);\n              },\n              children: [_jsxs(Text, {\n                children: [_jsx(Text, {\n                  style: message.author.user_id === loggedUser.userId ? styles.userMessageText : styles.otherMessageText,\n                  children: message.author.user_id === loggedUser.userId ? '' : message.author.first_name + \": \"\n                }), _jsx(Text, {\n                  style: message.author.user_id === loggedUser.userId ? styles.userMessageText : styles.otherMessageText,\n                  children: message.message\n                }), _jsx(Text, {\n                  style: styles.messageTime,\n                  children: new Date(message.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                })]\n              }), selectedMessage === message.id && message.author.user_id === loggedUser.userId && _jsxs(View, {\n                style: styles.editDeleteIconsContainer,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.editIconContainer,\n                  onPress: function onPress() {\n                    return handleEditMessage(message.id);\n                  },\n                  children: _jsx(FontAwesome, {\n                    name: \"edit\",\n                    size: 20,\n                    color: \"#007AFF\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.deleteIconContainer,\n                  onPress: function onPress() {\n                    return handleDeleteMessage(message.id);\n                  },\n                  children: _jsx(FontAwesome, {\n                    name: \"trash\",\n                    size: 20,\n                    color: \"#FF3B30\"\n                  })\n                })]\n              })]\n            })]\n          }, index);\n        }), chat && chat.messages && chat.messages.length === 0 && _jsx(Text, {\n          style: styles.noMessagesText,\n          children: \"No messages yet.\"\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          value: inputText,\n          onChangeText: setInputText,\n          placeholder: \"Type a message\",\n          style: styles.textInput,\n          onSubmitEditing: handleSendMessage\n        }), _jsx(TouchableOpacity, {\n          style: styles.sendButton,\n          onPress: handleSendMessage,\n          children: _jsx(Text, {\n            style: styles.sendButtonText,\n            children: \"Send\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    paddingVertical: 10,\n    paddingHorizontal: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#3366FF',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginBottom: 10\n  },\n  headerTitle: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  backButton: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  backButtonText: {\n    color: '#3366FF',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  messageListContainer: {\n    flexGrow: 1\n  },\n  messageContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    maxWidth: '80%',\n    marginBottom: 10,\n    alignSelf: 'flex-start'\n  },\n  userMessageContainer: {\n    backgroundColor: '#DCF8C6',\n    alignSelf: 'flex-end'\n  },\n  otherMessageContainer: {\n    backgroundColor: '#FFFFFF'\n  },\n  userMessageText: {\n    color: '#000000',\n    fontSize: 16\n  },\n  otherMessageText: {\n    color: '#000000',\n    fontSize: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  textInput: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#C8C8C8',\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    marginRight: 10\n  },\n  sendButton: {\n    backgroundColor: '#3366FF',\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  sendButtonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  },\n  noMessagesText: {\n    color: '#000000',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigation","getChatById","postMessage","postAddMember","deleteChatMember","URLaddress","loggedUser","FontAwesome","Chat","route","chatId","params","messages","chat","setChat","setMessages","inputText","setInputText","showMembers","setShowMembers","userId","setUserId","selectedMessage","setSelectedMessage","scrollViewRef","navigation","current","scrollToEnd","animated","handleSendMessage","trim","text","sender","console","log","then","catch","error","handleAddMember","handleRemoveMember","memberId","handleEditMessage","handleDeleteMessage","styles","safeAreaContainer","membersContainer","membersHeader","members","map","member","memberRow","memberName","first_name","last_name","user_id","addMemberContainer","addMemberInput","value","addMemberButton","addMemberButtonText","headerContainer","backButton","goBack","backButtonText","headerText","name","membersButton","Platform","OS","container","messageListContainer","sort","a","b","timestamp","message","index","array","Date","toDateString","dateSeparatorContainer","dateSeparatorText","messageContainer","author","userMessageContainer","otherMessageContainer","id","userMessageText","otherMessageText","messageTime","toLocaleTimeString","hour","minute","editDeleteIconsContainer","editIconContainer","deleteIconContainer","length","noMessagesText","inputContainer","textInput","sendButton","sendButtonText","StyleSheet","create","flex","backgroundColor","paddingVertical","paddingHorizontal","flexDirection","alignItems","justifyContent","marginBottom","headerTitle","color","fontSize","fontWeight","borderRadius","flexGrow","maxWidth","alignSelf","height","borderWidth","borderColor","marginRight","textAlign"],"sources":["C:/WhatsThat Server/WhatsThatApp/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getChatById, postMessage, postAddMember, deleteChatMember } from './ChatRequests';\r\nimport { URLaddress, loggedUser } from './App';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nexport default function Chat ({ route }) {\r\n  const { chatId } = route.params;\r\n  const [chat, setChat] = useState({ messages: [] });\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [showMembers, setShowMembers] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const scrollViewRef = useRef();\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    getChatById(setChat, chatId);\r\n  }, []);\r\n\r\n  // Scroll to bottom of the message list whenever a new message is added\r\n  useEffect(() => {\r\n    scrollViewRef.current.scrollToEnd({ animated: true });\r\n  }, [messages]);\r\n\r\n  // Function to handle sending a message\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim() === '') return;\r\n    setMessages([...messages, { text: inputText, sender: 'user' }]);\r\n    setInputText('');\r\n    console.log(\"Message sent:\", inputText);\r\n    postMessage(chatId, inputText)\r\n      .then(() => {\r\n        getChatById(setChat, chatId);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Function to handle adding a member to the chat\r\n  const handleAddMember = async () => {\r\n    console.log('Adding member');\r\n    try {\r\n      await postAddMember(chatId, userId);\r\n      setUserId('');\r\n      await getChatById(setChat, chatId);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  // Function to handle removing a member from the chat\r\n  const handleRemoveMember = async (memberId) => {\r\n    console.log('Removing member');\r\n    try {\r\n      await deleteChatMember(chatId, memberId);\r\n      await getChatById(setChat, chatId);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEditMessage = async () => {\r\n    console.log('Editing message');\r\n    \r\n  };\r\n\r\n  const handleDeleteMessage = async () => {\r\n    console.log('Deleting message');\r\n    \r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.safeAreaContainer}>\r\n      {showMembers && (\r\n        <View style={styles.membersContainer}>\r\n          <Text style={styles.membersHeader}>Members</Text>\r\n          {chat.members.map((member) => (\r\n          <View key={member.user_id} style={styles.memberRow}>\r\n            <Text style={styles.memberName}>\r\n              {member.first_name} {member.last_name}\r\n            </Text>\r\n            <TouchableOpacity onPress={() => handleRemoveMember(member.user_id)}>\r\n              <FontAwesome name=\"trash-o\" size={24} color=\"red\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n          <View style={styles.addMemberContainer}>\r\n            <TextInput\r\n              style={styles.addMemberInput}\r\n              placeholder=\"Enter userId\"\r\n              value={userId}\r\n              onChangeText={(value) => setUserId(value)}\r\n            />\r\n            <TouchableOpacity style={styles.addMemberButton} onPress={handleAddMember}>\r\n              <Text style={styles.addMemberButtonText}>Add Member</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n      <View style={styles.headerContainer}>\r\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\r\n          <Text style={styles.backButtonText}>{'<'}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerText}>{chat.name}</Text>\r\n        <TouchableOpacity style={styles.membersButton} onPress={() => setShowMembers(!showMembers)}>\r\n          <FontAwesome name=\"users\" size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.container}\r\n      >\r\n        <ScrollView\r\n          ref={scrollViewRef}\r\n          onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}\r\n          contentContainerStyle={styles.messageListContainer}\r\n        >\r\n{chat.messages.sort((a, b) => a.timestamp - b.timestamp).map((message, index, array) => (\r\n  <View key={index}>\r\n    {index === 0 || new Date(message.timestamp).toDateString() !== new Date(array[index-1].timestamp).toDateString() ?\r\n      <View style={styles.dateSeparatorContainer}>\r\n        <Text style={styles.dateSeparatorText}>\r\n          {new Date(message.timestamp).toDateString()}\r\n        </Text>\r\n      </View>\r\n    : null }\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.messageContainer,\r\n        message.author.user_id === loggedUser.userId ? styles.userMessageContainer : styles.otherMessageContainer\r\n      ]}\r\n      onPress={() => setSelectedMessage(message.id)}\r\n    >\r\n      <Text>\r\n        <Text style={message.author.user_id === loggedUser.userId ? styles.userMessageText : styles.otherMessageText}>\r\n          {message.author.user_id === loggedUser.userId ? '' : `${message.author.first_name}: `}\r\n        </Text>\r\n        <Text style={message.author.user_id === loggedUser.userId ? styles.userMessageText : styles.otherMessageText}>\r\n          {message.message}\r\n        </Text>\r\n        <Text style={styles.messageTime}>\r\n          {new Date(message.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\r\n        </Text>\r\n      </Text>\r\n      {selectedMessage === message.id && message.author.user_id === loggedUser.userId && (\r\n        <View style={styles.editDeleteIconsContainer}>\r\n          <TouchableOpacity style={styles.editIconContainer} onPress={() => handleEditMessage(message.id)}>\r\n            <FontAwesome name=\"edit\" size={20} color=\"#007AFF\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.deleteIconContainer} onPress={() => handleDeleteMessage(message.id)}>\r\n            <FontAwesome name=\"trash\" size={20} color=\"#FF3B30\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </TouchableOpacity>\r\n  </View>\r\n))}\r\n\r\n{chat && chat.messages && chat.messages.length === 0 && (\r\n  <Text style={styles.noMessagesText}>No messages yet.</Text>\r\n)}\r\n        </ScrollView>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            value={inputText}\r\n            onChangeText={setInputText}\r\n            placeholder=\"Type a message\"\r\n            style={styles.textInput}\r\n            onSubmitEditing={handleSendMessage}\r\n          />\r\n          <TouchableOpacity style={styles.sendButton} onPress={handleSendMessage}>\r\n            <Text style={styles.sendButtonText}>Send</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  safeAreaContainer: {\r\n  flex: 1,\r\n  backgroundColor: '#fff'\r\n  },\r\n  container: {\r\n  flex: 1,\r\n  backgroundColor: '#F5F5F5',\r\n  paddingVertical: 10,\r\n  paddingHorizontal: 10\r\n  },\r\n  headerContainer: {\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  backgroundColor: '#3366FF',\r\n  paddingHorizontal: 10,\r\n  paddingVertical: 5,\r\n  marginBottom: 10\r\n  },\r\n  headerTitle: {\r\n  color: '#FFFFFF',\r\n  fontSize: 18,\r\n  fontWeight: 'bold'\r\n  },\r\n  backButton: {\r\n  backgroundColor: '#FFFFFF',\r\n  borderRadius: 10,\r\n  paddingVertical: 5,\r\n  paddingHorizontal: 10\r\n  },\r\n  backButtonText: {\r\n  color: '#3366FF',\r\n  fontWeight: 'bold',\r\n  fontSize: 16\r\n  },\r\n  messageListContainer: {\r\n  flexGrow: 1\r\n  },\r\n  messageContainer: {\r\n  backgroundColor: '#FFFFFF',\r\n  borderRadius: 10,\r\n  maxWidth: '80%',\r\n  marginBottom: 10,\r\n  alignSelf: 'flex-start'\r\n  },\r\n  userMessageContainer: {\r\n  backgroundColor: '#DCF8C6',\r\n  alignSelf: 'flex-end'\r\n  },\r\n  otherMessageContainer: {\r\n  backgroundColor: '#FFFFFF'\r\n  },\r\n  userMessageText: {\r\n  color: '#000000',\r\n  fontSize: 16\r\n  },\r\n  otherMessageText: {\r\n  color: '#000000',\r\n  fontSize: 16\r\n  },\r\n  inputContainer: {\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  backgroundColor: '#FFFFFF',\r\n  paddingHorizontal: 10,\r\n  paddingVertical: 5\r\n  },\r\n  textInput: {\r\n  flex: 1,\r\n  height: 40,\r\n  borderWidth: 1,\r\n  borderColor: '#C8C8C8',\r\n  borderRadius: 10,\r\n  paddingHorizontal: 10,\r\n  marginRight: 10\r\n  },\r\n  sendButton: {\r\n  backgroundColor: '#3366FF',\r\n  borderRadius: 10,\r\n  paddingVertical: 10,\r\n  paddingHorizontal: 20\r\n  },\r\n  sendButtonText: {\r\n  color: '#FFFFFF',\r\n  fontWeight: 'bold'\r\n  },\r\n  noMessagesText: {\r\n  color: '#000000',\r\n  textAlign: 'center'\r\n  }\r\n  });\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}