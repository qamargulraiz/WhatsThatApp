{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { URLaddress, loggedUser } from \"./App\";\nimport { getContacts, postContact } from \"./Contact\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { getUserInfo, patchUserInfo } from \"./UserRequests\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar exampleChats = [{\n  id: 1,\n  name: 'Alice',\n  lastMessage: 'Hey, how are you?'\n}, {\n  id: 2,\n  name: 'Jack',\n  lastMessage: 'See you tomorrow!'\n}, {\n  id: 3,\n  name: 'Lenny',\n  lastMessage: 'Can you send me that file?'\n}];\nvar exampleContacts = [{\n  user_id: 1,\n  first_name: 'Alice',\n  last_name: 'Mc',\n  email: 'alice@gmail.com'\n}, {\n  user_id: 2,\n  first_name: 'Jack',\n  last_name: 'Sparrow',\n  email: 'jack@gmail.com'\n}, {\n  user_id: 3,\n  first_name: 'Lenny',\n  last_name: 'Stuart',\n  email: 'lenny@gmail.com'\n}];\nfunction Chats() {\n  return _jsx(View, {\n    style: styles.tabContent,\n    children: exampleChats.map(function (chat) {\n      return _jsxs(View, {\n        style: styles.chatItem,\n        children: [_jsx(Text, {\n          style: styles.chatName,\n          children: chat.name\n        }), _jsx(Text, {\n          style: styles.chatLastMessage,\n          children: chat.lastMessage\n        })]\n      }, chat.id);\n    })\n  });\n}\nfunction Contacts() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    contacts = _useState2[0],\n    setContacts = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showInput = _useState4[0],\n    setShowInput = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userId = _useState6[0],\n    setUserId = _useState6[1];\n  useEffect(function () {\n    getContacts([contacts, setContacts]);\n  }, []);\n  var handleAddContact = function handleAddContact() {\n    setShowInput(true);\n  };\n  var handleSaveContact = function handleSaveContact() {\n    postContact(userId).then(function () {\n      setShowInput(false);\n      setUserId('');\n      getContacts([contacts, setContacts]);\n    }).catch(function (error) {\n      console.error('Error saving contact: ', error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.tabContent,\n    children: [contacts.map(function (contact) {\n      return _jsx(View, {\n        style: styles.contactItem,\n        children: _jsxs(Text, {\n          style: styles.contactName,\n          children: [contact.first_name, \" \", contact.last_name]\n        })\n      }, contact.user_id);\n    }), showInput ? _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"User ID\",\n        value: userId,\n        onChangeText: setUserId,\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.saveContactButton,\n        onPress: handleSaveContact,\n        children: _jsx(Text, {\n          style: styles.saveContactButtonText,\n          children: \"Save\"\n        })\n      })]\n    }) : _jsx(TouchableOpacity, {\n      style: styles.newContactButton,\n      onPress: handleAddContact,\n      children: _jsx(FontAwesome, {\n        name: \"user-plus\",\n        size: 20,\n        color: \"#FFF\"\n      })\n    })]\n  });\n}\nfunction Profile() {\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    surname = _useState10[0],\n    setSurname = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    email = _useState12[0],\n    setEmail = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    password = _useState14[0],\n    setPassword = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    image = _useState16[0],\n    setImage = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showUpdate = _useState18[0],\n    setShowUpdate = _useState18[1];\n  useEffect(function () {\n    getUserInfo(loggedUser.userId).then(function (data) {\n      setName(data.first_name);\n      setSurname(data.last_name);\n      setEmail(data.email);\n      setPassword(data.password);\n    }).catch(function (error) {\n      console.error('Error getting user info: ', error);\n    });\n  }, []);\n  var handleUpdateProfile = function handleUpdateProfile(field) {\n    switch (field) {\n      case 'name':\n        patchUserInfo({\n          first_name: name\n        });\n        break;\n      case 'surname':\n        patchUserInfo({\n          last_name: surname\n        });\n        break;\n      case 'email':\n        patchUserInfo({\n          email: email\n        });\n        break;\n      case 'password':\n        patchUserInfo({\n          password: password\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  var handleImageChange = function handleImageChange(event) {\n    var uri = event.nativeEvent.uri;\n    setImage(uri);\n  };\n  var handleEditProfile = function handleEditProfile() {\n    setIsEditing(true);\n  };\n  var handleSaveProfile = function handleSaveProfile() {\n    setIsEditing(false);\n  };\n  return _jsxs(View, {\n    style: styles.tabContent,\n    children: [_jsxs(View, {\n      style: styles.profileImageContainer,\n      children: [image ? _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.profileImage\n      }) : _jsx(FontAwesome, {\n        name: \"user\",\n        size: 100,\n        color: \"#555\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.editImageButton,\n        children: [_jsx(Text, {\n          style: styles.editImageButtonText,\n          children: \"Edit Image\"\n        }), _jsx(TextInput, {\n          style: styles.hiddenInput,\n          onChange: handleImageChange\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.showUpdateButton,\n      onPress: function onPress() {\n        return setShowUpdate(true);\n      },\n      children: _jsx(Text, {\n        style: styles.showUpdateButtonText,\n        children: \"Update Profile\"\n      })\n    }), showUpdate ? _jsxs(View, {\n      style: styles.profileInfo,\n      children: [_jsxs(View, {\n        style: {\n          width: '100%',\n          marginBottom: 10\n        },\n        children: [_jsx(TextInput, {\n          style: styles.inputProfile,\n          placeholder: \"Name\",\n          value: name,\n          onChangeText: setName\n        }), _jsx(TouchableOpacity, {\n          style: styles.updateButtonProfile,\n          onPress: function onPress() {\n            return handleUpdateProfile('name');\n          },\n          children: _jsx(FontAwesome, {\n            name: \"pencil\",\n            style: styles.updateButtonIcon\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: '100%',\n          marginBottom: 10\n        },\n        children: [_jsx(TextInput, {\n          style: styles.inputProfile,\n          placeholder: \"Surname\",\n          value: surname,\n          onChangeText: setSurname\n        }), _jsx(TouchableOpacity, {\n          style: styles.updateButtonProfile,\n          onPress: function onPress() {\n            return handleUpdateProfile('surname');\n          },\n          children: _jsx(FontAwesome, {\n            name: \"pencil\",\n            style: styles.updateButtonIcon\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: '100%',\n          marginBottom: 10\n        },\n        children: [_jsx(TextInput, {\n          style: styles.inputProfile,\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: setEmail\n        }), _jsx(TouchableOpacity, {\n          style: styles.updateButtonProfile,\n          onPress: function onPress() {\n            return handleUpdateProfile('email');\n          },\n          children: _jsx(FontAwesome, {\n            name: \"pencil\",\n            style: styles.updateButtonIcon\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: '100%',\n          marginBottom: 10\n        },\n        children: [_jsx(TextInput, {\n          style: styles.inputProfile,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          value: password,\n          onChangeText: setPassword\n        }), _jsx(TouchableOpacity, {\n          style: styles.updateButtonProfile,\n          onPress: function onPress() {\n            return handleUpdateProfile('password');\n          },\n          children: _jsx(FontAwesome, {\n            name: \"pencil\",\n            style: styles.updateButtonIcon\n          })\n        })]\n      })]\n    }) : _jsxs(View, {\n      style: styles.profileInfoMain,\n      children: [_jsx(Text, {\n        style: styles.profileText,\n        children: name + \" \" + surname\n      }), _jsx(Text, {\n        style: styles.profileText,\n        children: \"\" + email\n      })]\n    })]\n  });\n}\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n  var _useState19 = useState('Chats'),\n    _useState20 = _slicedToArray(_useState19, 2),\n    activeTab = _useState20[0],\n    setActiveTab = _useState20[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.navBar,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.tabButton, activeTab === 'Profile' && styles.activeTabButton],\n        onPress: function onPress() {\n          return setActiveTab('Profile');\n        },\n        children: activeTab === 'Profile' ? _jsx(Text, {\n          style: [styles.tabButtonText, styles.activeTabButtonText],\n          children: \"Profile\"\n        }) : _jsx(FontAwesome, {\n          name: \"user-o\",\n          size: 18,\n          color: \"#fff\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tabButton, activeTab === 'Chats' && styles.activeTabButton],\n        onPress: function onPress() {\n          return setActiveTab('Chats');\n        },\n        children: activeTab === 'Chats' ? _jsx(Text, {\n          style: [styles.tabButtonText, styles.activeTabButtonText],\n          children: \"Chats\"\n        }) : _jsx(FontAwesome, {\n          name: \"comments\",\n          size: 18,\n          color: \"#fff\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tabButton, activeTab === 'Contacts' && styles.activeTabButton],\n        onPress: function onPress() {\n          return setActiveTab('Contacts');\n        },\n        children: activeTab === 'Contacts' ? _jsx(Text, {\n          style: [styles.tabButtonText, styles.activeTabButtonText],\n          children: \"Contacts\"\n        }) : _jsx(FontAwesome, {\n          name: \"address-book-o\",\n          size: 18,\n          color: \"#fff\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Chat');\n        },\n        children: _jsx(Text, {\n          children: \"Go to Chat screen\"\n        })\n      })]\n    }), activeTab === 'Chats' ? _jsx(Chats, {}) : activeTab === 'Contacts' ? _jsx(Contacts, {}) : _jsx(Profile, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  navBar: {\n    flexDirection: 'row',\n    backgroundColor: '#007aff',\n    height: 60\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  tabButtonContent: {\n    paddingHorizontal: 10\n  },\n  tabButtonText: {\n    color: '#fff',\n    fontSize: 18\n  },\n  activeTabButton: {\n    flex: 3,\n    borderBottomWidth: 2,\n    borderBottomColor: '#fff'\n  },\n  activeTabButtonText: {\n    fontWeight: 'bold'\n  },\n  tabContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  input: {\n    width: '100%',\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: '#f0f0f0',\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  imageContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  profileImageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  },\n  editImageButton: {\n    marginTop: 10\n  },\n  editImageButtonText: {\n    color: 'blue'\n  },\n  hiddenInput: {\n    display: 'none'\n  },\n  showUpdateButton: {\n    marginTop: 10\n  },\n  showUpdateButtonText: {\n    color: 'blue'\n  },\n  profileInfo: {\n    width: '100%',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  updateButtonProfile: {\n    backgroundColor: 'transparent',\n    height: 30,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  updateButtonIcon: {\n    color: 'blue',\n    fontSize: 18\n  },\n  updateButtonText: {\n    color: 'white',\n    flex: 1\n  },\n  profileInfoMain: {\n    width: '50%',\n    allignItems: 'centre',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  profileText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  changeImageButton: {\n    backgroundColor: '#007aff',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  changeImageButtonText: {\n    color: '#fff',\n    textAlign: 'center'\n  },\n  form: {\n    width: '100%'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  submitButton: {\n    backgroundColor: '#007aff',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 20\n  },\n  submitButtonText: {\n    color: '#fff',\n    textAlign: 'center'\n  },\n  profileName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 20\n  },\n  profileEmail: {\n    color: '#777',\n    fontSize: 14,\n    marginTop: 5\n  },\n  inputProfile: {\n    width: '70%',\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: '#f0f0f0',\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  chatItem: {\n    width: '100%',\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n    paddingTop: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  chatName: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: 5\n  },\n  chatLastMessage: {\n    color: '#777',\n    fontSize: 14\n  },\n  contactItem: {\n    width: '100%',\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n    paddingTop: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  contactName: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  newContactButton: {\n    position: 'absolute',\n    bottom: 16,\n    right: 16,\n    width: 56,\n    height: 56,\n    backgroundColor: '#3366FF',\n    borderRadius: 28,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  },\n  newContactButtonText: {\n    color: '#fff',\n    fontSize: 32,\n    lineHeight: 32\n  },\n  inputContainer: {\n    width: '100%',\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  saveButton: {\n    backgroundColor: '#3366FF',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignItems: 'center'\n  },\n  saveButtonText: {\n    color: '#fff',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useNavigation","URLaddress","loggedUser","getContacts","postContact","FontAwesome","getUserInfo","patchUserInfo","exampleChats","id","name","lastMessage","exampleContacts","user_id","first_name","last_name","email","Chats","styles","tabContent","map","chat","chatItem","chatName","chatLastMessage","Contacts","contacts","setContacts","showInput","setShowInput","userId","setUserId","handleAddContact","handleSaveContact","then","catch","error","console","contact","contactItem","contactName","inputContainer","input","saveContactButton","saveContactButtonText","newContactButton","Profile","setName","surname","setSurname","setEmail","password","setPassword","image","setImage","showUpdate","setShowUpdate","data","handleUpdateProfile","field","handleImageChange","event","uri","nativeEvent","handleEditProfile","setIsEditing","handleSaveProfile","profileImageContainer","profileImage","editImageButton","editImageButtonText","hiddenInput","showUpdateButton","showUpdateButtonText","profileInfo","width","marginBottom","inputProfile","updateButtonProfile","updateButtonIcon","profileInfoMain","profileText","Home","navigation","activeTab","setActiveTab","container","navBar","tabButton","activeTabButton","tabButtonText","activeTabButtonText","navigate","StyleSheet","create","flex","backgroundColor","flexDirection","height","justifyContent","alignItems","tabButtonContent","paddingHorizontal","color","fontSize","borderBottomWidth","borderBottomColor","fontWeight","padding","borderWidth","borderColor","borderRadius","imageContainer","marginTop","display","flexWrap","updateButtonText","allignItems","changeImageButton","changeImageButtonText","textAlign","form","label","submitButton","submitButtonText","profileName","profileEmail","paddingTop","position","bottom","right","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","newContactButtonText","lineHeight","saveButton","saveButtonText"],"sources":["C:/WhatsThat Server/WhatsThatApp/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image, TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { URLaddress, loggedUser } from './App';\r\nimport { getContacts, postContact } from './Contact';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { getUserInfo, patchUserInfo } from './UserRequests';\r\n\r\n// Example data for chats and contacts\r\nconst exampleChats = [\r\n  { id: 1, name: 'Alice', lastMessage: 'Hey, how are you?' },\r\n  { id: 2, name: 'Jack', lastMessage: 'See you tomorrow!' },\r\n  { id: 3, name: 'Lenny', lastMessage: 'Can you send me that file?' },\r\n];\r\n\r\nconst exampleContacts = [\r\n  { user_id: 1, first_name: 'Alice', last_name: 'Mc', email: 'alice@gmail.com' },\r\n  { user_id: 2, first_name: 'Jack', last_name: 'Sparrow', email: 'jack@gmail.com' },\r\n  { user_id: 3, first_name: 'Lenny', last_name: 'Stuart', email: 'lenny@gmail.com' },\r\n];\r\n\r\n// Define Chats component\r\nfunction Chats() {\r\n  return (\r\n    <View style={styles.tabContent}>\r\n      {exampleChats.map(chat => (\r\n        <View key={chat.id} style={styles.chatItem}>\r\n          <Text style={styles.chatName}>{chat.name}</Text>\r\n          <Text style={styles.chatLastMessage}>{chat.lastMessage}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\n// Define Contacts component\r\nfunction Contacts() {\r\n  \r\n  const [contacts, setContacts] = useState([]);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  \r\n  useEffect(() => {\r\n    getContacts([contacts, setContacts]);\r\n  }, []);\r\n\r\n  const handleAddContact = () => {\r\n    setShowInput(true);\r\n  };\r\n\r\n  const handleSaveContact = () => {\r\n    // call API to save the contact with the provided user ID\r\n    postContact(userId)\r\n      .then(() => {\r\n        setShowInput(false);\r\n        setUserId('');\r\n        // call getContacts to update the contacts list with the new contact\r\n        getContacts([contacts, setContacts]);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving contact: ', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.tabContent}>\r\n      {contacts.map(contact => (\r\n        <View key={contact.user_id} style={styles.contactItem}>\r\n          <Text style={styles.contactName}>{contact.first_name} {contact.last_name}</Text>\r\n        </View>\r\n      ))}\r\n      {showInput ? (\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"User ID\"\r\n            value={userId}\r\n            onChangeText={setUserId}\r\n            keyboardType=\"numeric\"\r\n          />\r\n          <TouchableOpacity style={styles.saveContactButton} onPress={handleSaveContact}>\r\n            <Text style={styles.saveContactButtonText}>Save</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <TouchableOpacity style={styles.newContactButton} onPress={handleAddContact}>\r\n          <FontAwesome name=\"user-plus\" size={20} color=\"#FFF\" />        \r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Profile() {\r\n  const [name, setName] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n\r\n  \r\n  useEffect(() => {\r\n    // call the getUserInfo function and update state variables with the user information\r\n    getUserInfo(loggedUser.userId)\r\n      .then(data => {\r\n        setName(data.first_name);\r\n        setSurname(data.last_name);\r\n        setEmail(data.email);\r\n        setPassword(data.password);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error getting user info: ', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleUpdateProfile = (field) => {\r\n    switch (field) {\r\n      case 'name':\r\n        patchUserInfo({ first_name: name })\r\n        break;\r\n      case 'surname':\r\n        patchUserInfo({ last_name: surname })\r\n       \r\n        break;\r\n      case 'email':\r\n        patchUserInfo({ email: email })\r\n        \r\n        break;\r\n      case 'password':\r\n        patchUserInfo({ password: password })\r\n        \r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const { uri } = event.nativeEvent;\r\n    setImage(uri);\r\n  };\r\n\r\n  const handleEditProfile = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveProfile = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.tabContent}>\r\n      <View style={styles.profileImageContainer}>\r\n        {image ? (\r\n          <Image source={{ uri: image }} style={styles.profileImage} />\r\n        ) : (\r\n          <FontAwesome name=\"user\" size={100} color=\"#555\" />\r\n        )}\r\n        <TouchableOpacity style={styles.editImageButton}>\r\n          <Text style={styles.editImageButtonText}>Edit Image</Text>\r\n          <TextInput style={styles.hiddenInput} onChange={handleImageChange} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity style={styles.showUpdateButton} onPress={() => setShowUpdate(true)}>\r\n        <Text style={styles.showUpdateButtonText}>Update Profile</Text>\r\n      </TouchableOpacity>\r\n      {showUpdate ? (\r\n        <View style={styles.profileInfo}>\r\n        <View style={{ width: '100%', marginBottom: 10 }}>\r\n          <TextInput\r\n            style={styles.inputProfile}\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChangeText={setName}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.updateButtonProfile}\r\n            onPress={() => handleUpdateProfile('name')}\r\n          >\r\n            <FontAwesome name=\"pencil\" style={styles.updateButtonIcon} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ width: '100%', marginBottom: 10 }}>\r\n          <TextInput\r\n            style={styles.inputProfile}\r\n            placeholder=\"Surname\"\r\n            value={surname}\r\n            onChangeText={setSurname}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.updateButtonProfile}\r\n            onPress={() => handleUpdateProfile('surname')}\r\n          >\r\n            <FontAwesome name=\"pencil\" style={styles.updateButtonIcon} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ width: '100%', marginBottom: 10 }}>\r\n          <TextInput\r\n            style={styles.inputProfile}\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.updateButtonProfile}\r\n            onPress={() => handleUpdateProfile('email')}\r\n          >\r\n            <FontAwesome name=\"pencil\" style={styles.updateButtonIcon} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ width: '100%', marginBottom: 10 }}>\r\n          <TextInput\r\n            style={styles.inputProfile}\r\n            placeholder=\"Password\"\r\n            secureTextEntry={true}\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.updateButtonProfile}\r\n            onPress={() => handleUpdateProfile('password')}\r\n          >\r\n            <FontAwesome name=\"pencil\" style={styles.updateButtonIcon} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.profileInfoMain}>\r\n          <Text style={styles.profileText}>{`${name} ${surname}`}</Text>\r\n          {/* <Text style={styles.profileText}>{`Surname: ${surname}`}</Text> */}\r\n          <Text style={styles.profileText}>{`${email}`}</Text>\r\n          {/* <Text style={styles.profileText}>{`Password: ${password}`}</Text> */}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function Home({navigation}) {\r\n  \r\n  const [activeTab, setActiveTab] = useState('Chats');\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Nav bar */}\r\n      <View style={styles.navBar}>\r\n      <TouchableOpacity\r\n          style={[styles.tabButton, activeTab === 'Profile' && styles.activeTabButton]}\r\n          onPress={() => setActiveTab('Profile')}\r\n        >\r\n          {activeTab === 'Profile' ? (\r\n      <Text style={[styles.tabButtonText, styles.activeTabButtonText]}>Profile</Text>\r\n    ) : (\r\n      <FontAwesome name=\"user-o\" size={18} color=\"#fff\" />\r\n    )}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.tabButton, activeTab === 'Chats' && styles.activeTabButton]}\r\n          onPress={() => setActiveTab('Chats')}\r\n        >\r\n          {activeTab === 'Chats' ? (\r\n      <Text style={[styles.tabButtonText, styles.activeTabButtonText]}>Chats</Text>\r\n    ) : (\r\n      <FontAwesome name=\"comments\" size={18} color=\"#fff\" />\r\n    )}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.tabButton, activeTab === 'Contacts' && styles.activeTabButton]}\r\n          onPress={() => setActiveTab('Contacts')}\r\n        >\r\n          {activeTab === 'Contacts' ? (\r\n      <Text style={[styles.tabButtonText, styles.activeTabButtonText]}>Contacts</Text>\r\n    ) : (\r\n      <FontAwesome name=\"address-book-o\" size={18} color=\"#fff\" />\r\n    )}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Chat')}>\r\n        <Text>Go to Chat screen</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n  \r\n      {/* Tab content */}\r\n      {activeTab === 'Chats' ? <Chats /> : activeTab === 'Contacts' ? <Contacts /> : <Profile />}\r\n    </View>\r\n  );\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  navBar: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#007aff',\r\n    height: 60,\r\n  },\r\n  tabButton: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tabButtonContent: {\r\n    paddingHorizontal: 10,\r\n  },\r\n  tabButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n  },\r\n  activeTabButton: {\r\n    flex: 3,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#fff',\r\n  },\r\n  activeTabButtonText: {\r\n    fontWeight: 'bold',\r\n  },\r\n  tabContent: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  }, \r\n  input: {\r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    backgroundColor: '#f0f0f0',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n    },\r\n    imageContainer: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n    },\r\n    profileImageContainer: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginBottom: 20,\r\n      },\r\n      profileImage: {\r\n      width: 100,\r\n      height: 100,\r\n      borderRadius: 50,\r\n      },\r\n      editImageButton: {\r\n        marginTop: 10,\r\n        },\r\n        editImageButtonText: {\r\n        color: 'blue',\r\n        },\r\n        hiddenInput: {\r\n          display: 'none',\r\n          },\r\n          showUpdateButton: {\r\n          marginTop: 10,\r\n          },\r\n          showUpdateButtonText: {\r\n          color: 'blue',\r\n          },\r\n          profileInfo: {\r\n            width: '100%',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n          },          \r\n          updateButtonProfile: {\r\n            backgroundColor: 'transparent',\r\n            height: 30,\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n            marginTop: 10,\r\n            },\r\n          updateButtonIcon: {\r\n            color: 'blue',\r\n            fontSize: 18,\r\n          },\r\n          updateButtonText: {\r\n            color: 'white',\r\n            flex: 1,\r\n            },\r\n            profileInfoMain: {\r\n              width: '50%',\r\n              allignItems: 'centre',\r\n              flexDirection: 'row',\r\n              flexWrap: 'wrap',\r\n            },\r\n            profileText: {\r\n            fontSize: 16,\r\n            marginBottom: 10,\r\n            },\r\n    changeImageButton: {\r\n    backgroundColor: '#007aff',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n    },\r\n    changeImageButtonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    },\r\n    form: {\r\n    width: '100%',\r\n    },\r\n    label: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    },\r\n    submitButton: {\r\n    backgroundColor: '#007aff',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n    },\r\n    submitButtonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    },\r\n    profileName: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    marginTop: 20,\r\n    },\r\n    profileEmail: {\r\n    color: '#777',\r\n    fontSize: 14,\r\n    marginTop: 5,\r\n    },\r\n    inputProfile: {\r\n      width: '70%',\r\n      padding: 10,\r\n      marginBottom: 10,\r\n      backgroundColor: '#f0f0f0',\r\n      borderWidth: 1,\r\n      borderColor: '#ccc',\r\n      borderRadius: 5,\r\n    },\r\n\r\n    chatItem: {\r\n      width: '100%',\r\n      padding: 20,\r\n      backgroundColor: '#f0f0f0',\r\n      paddingTop: 20,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#ccc',\r\n    },\r\n    chatName: {\r\n      fontWeight: 'bold',\r\n      fontSize: 16,\r\n      marginBottom: 5,\r\n    },\r\n    chatLastMessage: {\r\n      color: '#777',\r\n      fontSize: 14,\r\n    },\r\n    contactItem: {\r\n      width: '100%',\r\n      padding: 20,\r\n      backgroundColor: '#f0f0f0',\r\n      paddingTop: 20,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#ccc',\r\n    },\r\n    contactName: {\r\n      fontWeight: 'bold',\r\n      fontSize: 16,\r\n    },\r\n    newContactButton: {\r\n      position: 'absolute',\r\n      bottom: 16,\r\n      right: 16,\r\n      width: 56,\r\n      height: 56,\r\n      backgroundColor: '#3366FF',\r\n      borderRadius: 28,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowOpacity: 0.29,\r\n      shadowRadius: 4.65,\r\n  \r\n      elevation: 7,\r\n    },\r\n    newContactButtonText: {\r\n      color: '#fff',\r\n      fontSize: 32,\r\n      lineHeight: 32,\r\n    },\r\n    inputContainer: {\r\n      width: '100%',\r\n      paddingHorizontal: 20,\r\n      marginBottom: 20,\r\n    },\r\n    saveButton: {\r\n      backgroundColor: '#3366FF',\r\n      padding: 10,\r\n      borderRadius: 5,\r\n      marginTop: 10,\r\n      alignItems: 'center',\r\n    },\r\n    saveButtonText: {\r\n      color: '#fff',\r\n      textAlign: 'center',\r\n    },    \r\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}