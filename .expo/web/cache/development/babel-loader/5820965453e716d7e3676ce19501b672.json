{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { URLaddress, loggedUser } from \"./App\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar exampleChats = [{\n  id: 1,\n  name: 'Alice',\n  lastMessage: 'Hey, how are you?'\n}, {\n  id: 2,\n  name: 'Jack',\n  lastMessage: 'See you tomorrow!'\n}, {\n  id: 3,\n  name: 'Lenny',\n  lastMessage: 'Can you send me that file?'\n}];\nvar exampleContacts = [{\n  user_id: 1,\n  first_name: 'Alice',\n  last_name: 'Mc',\n  email: 'alice@gmail.com'\n}, {\n  user_id: 2,\n  first_name: 'Jack',\n  last_name: 'Sparrow',\n  email: 'jack@gmail.com'\n}, {\n  user_id: 3,\n  first_name: 'Lenny',\n  last_name: 'Stuart',\n  email: 'lenny@gmail.com'\n}];\nfunction Chats() {\n  return _jsx(View, {\n    style: styles.tabContent,\n    children: exampleChats.map(function (chat) {\n      return _jsxs(View, {\n        style: styles.chatItem,\n        children: [_jsx(Text, {\n          style: styles.chatName,\n          children: chat.name\n        }), _jsx(Text, {\n          style: styles.chatLastMessage,\n          children: chat.lastMessage\n        })]\n      }, chat.id);\n    })\n  });\n}\nfunction Contacts() {\n  return _jsx(View, {\n    style: styles.tabContent,\n    children: exampleContacts.map(function (contact) {\n      return _jsx(View, {\n        style: styles.contactItem,\n        children: _jsx(Text, {\n          style: styles.contactName,\n          children: contact.first_name + \" \" + contact.last_name\n        })\n      }, contact.id);\n    })\n  });\n}\nvar Home = function Home() {\n  var _useState = useState('Chats'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        onPress: function onPress() {\n          return setActiveTab('Chats');\n        },\n        children: \"Chats\"\n      }), _jsx(Text, {\n        onPress: function onPress() {\n          return setActiveTab('Contacts');\n        },\n        children: \"Contacts\"\n      })]\n    }), activeTab === 'Chats' ? _jsx(Chats, {}) : _jsx(Contacts, {})]\n  });\n};\nexport default loggedUser.userId ? Home : null;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  navBar: {\n    flexDirection: 'row',\n    backgroundColor: '#007aff',\n    height: 60\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  tabButtonText: {\n    color: '#fff',\n    fontSize: 18\n  },\n  activeTabButton: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#fff'\n  },\n  activeTabButtonText: {\n    fontWeight: 'bold'\n  },\n  tabContent: {\n    flex: 1,\n    alignItems: 'centre',\n    justifyContent: 'flex-start'\n  },\n  chatItem: {\n    width: '100%',\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n    paddingTop: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  chatName: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: 5\n  },\n  chatLastMessage: {\n    color: '#777',\n    fontSize: 14\n  },\n  contactItem: {\n    width: '100%',\n    padding: 20,\n    backgroundColor: '#f0f0f0',\n    paddingTop: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  contactName: {\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","URLaddress","loggedUser","exampleChats","id","name","lastMessage","exampleContacts","user_id","first_name","last_name","email","Chats","styles","tabContent","map","chat","chatItem","chatName","chatLastMessage","Contacts","contact","contactItem","contactName","Home","activeTab","setActiveTab","userId","StyleSheet","create","container","flex","backgroundColor","navBar","flexDirection","height","tabButton","justifyContent","alignItems","tabButtonText","color","fontSize","activeTabButton","borderBottomWidth","borderBottomColor","activeTabButtonText","fontWeight","width","padding","paddingTop","marginBottom"],"sources":["C:/WhatsThat Server/WhatsThatApp/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { URLaddress, loggedUser } from './App';\r\n\r\n// Example data for chats and contacts\r\nconst exampleChats = [\r\n  { id: 1, name: 'Alice', lastMessage: 'Hey, how are you?' },\r\n  { id: 2, name: 'Jack', lastMessage: 'See you tomorrow!' },\r\n  { id: 3, name: 'Lenny', lastMessage: 'Can you send me that file?' },\r\n];\r\n\r\nconst exampleContacts = [\r\n  { user_id: 1, first_name: 'Alice', last_name: 'Mc', email: 'alice@gmail.com' },\r\n  { user_id: 2, first_name: 'Jack', last_name: 'Sparrow', email: 'jack@gmail.com' },\r\n  { user_id: 3, first_name: 'Lenny', last_name: 'Stuart', email: 'lenny@gmail.com' },\r\n];\r\n\r\n// Define Chats component\r\nfunction Chats() {\r\n  return (\r\n    <View style={styles.tabContent}>\r\n      {exampleChats.map(chat => (\r\n        <View key={chat.id} style={styles.chatItem}>\r\n          <Text style={styles.chatName}>{chat.name}</Text>\r\n          <Text style={styles.chatLastMessage}>{chat.lastMessage}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\n// Define Contacts component\r\nfunction Contacts() {\r\n  return (\r\n    <View style={styles.tabContent}>\r\n      {exampleContacts.map(contact => (\r\n        <View key={contact.id} style={styles.contactItem}>\r\n          <Text style={styles.contactName}>{contact.first_name +\" \"+ contact.last_name}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\n// render the Home component only if the user is logged in\r\nconst Home = () => {\r\n  const [activeTab, setActiveTab] = useState('Chats');\r\n\r\n  return (\r\n    <View>\r\n      {/* Nav bar */}\r\n      <View>\r\n        <Text onPress={() => setActiveTab('Chats')}>Chats</Text>\r\n        <Text onPress={() => setActiveTab('Contacts')}>Contacts</Text>\r\n      </View>\r\n\r\n      {/* Tab content */}\r\n      {activeTab === 'Chats' ? <Chats /> : <Contacts />}\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n// export the Home component only if the user is logged in\r\nexport default loggedUser.userId ? Home : null;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  navBar: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#007aff',\r\n    height: 60,\r\n  },\r\n  tabButton: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tabButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n  },\r\n  activeTabButton: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#fff',\r\n  },\r\n  activeTabButtonText: {\r\n    fontWeight: 'bold',\r\n  },\r\n  tabContent: {\r\n    flex: 1,\r\n    alignItems: 'centre',\r\n    justifyContent: 'flex-start',\r\n  }, \r\n    chatItem: {\r\n      width: '100%',\r\n      padding: 20,\r\n      backgroundColor: '#f0f0f0',\r\n      paddingTop: 20,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#ccc',\r\n    },\r\n    chatName: {\r\n      fontWeight: 'bold',\r\n      fontSize: 16,\r\n      marginBottom: 5,\r\n    },\r\n    chatLastMessage: {\r\n      color: '#777',\r\n      fontSize: 14,\r\n    },\r\n    contactItem: {\r\n      width: '100%',\r\n      padding: 20,\r\n      backgroundColor: '#f0f0f0',\r\n      paddingTop: 20,\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#ccc',\r\n    },\r\n    contactName: {\r\n      fontWeight: 'bold',\r\n      fontSize: 16,\r\n    },\r\n    \r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}